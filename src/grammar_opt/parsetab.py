
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocEQUALSNOTEQUALSGREATERLESSGREATEREQUALLESSEQUALleftPLUSMINUSleftTIMESDIVIDEnonassocLPARENRPARENnonassocNEGATIVEASSIGN COLON COMMA DIVIDE DOUBLE EQUALS GOTO GREATER GREATEREQUAL ID IF INCLUDE INT LBRACE LBRACKET LESS LESSEQUAL LPAREN MAIN MATH_H MINUS NOTEQUALS NUMBER PLUS PRINTF RBRACE RBRACKET RET RPAREN SEMICOLON STDIO_H STRING TIMES VOIDprogram : includes arrays_def pointers temporals functions main\n    | includes arrays_def pointers temporals mainincludes : includes include\n    | includeinclude : INCLUDE STDIO_H\n    | INCLUDE MATH_Harrays_def : arrays_def array_def\n    | array_defarray_def : DOUBLE ID LBRACKET NUMBER RBRACKET SEMICOLONpointers : pointers pointer\n    | pointerpointer : DOUBLE ID ASSIGN NUMBER SEMICOLONtemporals : DOUBLE list_temporals SEMICOLONlist_temporals : list_temporals COMMA ID\n    | IDfunctions : functions function\n    | functionfunction : VOID ID LPAREN RPAREN LBRACE body RBRACEmain : INT MAIN LPAREN RPAREN LBRACE body RBRACEbody : body statement\n    | statementstatement : return\n    | assignment\n    | if_goto\n    | goto\n    | label\n    | print\n    | array_assign\n    | call\n    return : RET expression SEMICOLON\n    | RET SEMICOLONassignment : ID ASSIGN expression SEMICOLONif_goto : IF LPAREN expression RPAREN GOTO ID SEMICOLONgoto : GOTO ID SEMICOLONlabel : ID COLONprint : PRINTF LPAREN STRING COMMA expression RPAREN SEMICOLONarray_assign : ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLONcall : ID LPAREN RPAREN SEMICOLONexpression : NUMBERexpression : IDexpression : LPAREN INT RPAREN expression\n    | LPAREN DOUBLE RPAREN expressionexpression : ID LBRACKET expression RBRACKETexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | expression EQUALS expression\n    | expression NOTEQUALS expression\n    | expression GREATER expression\n    | expression LESS expression\n    | expression GREATEREQUAL expression\n    | expression LESSEQUAL expressionexpression : MINUS expression %prec NEGATIVE'
    
_lr_action_items = {'INCLUDE':([0,2,3,6,9,10,],[4,4,-4,-3,-5,-6,]),'$end':([1,22,30,63,],[0,-2,-1,-19,]),'DOUBLE':([2,3,5,6,7,9,10,11,12,13,17,41,42,69,],[8,-4,14,-3,-8,-5,-6,18,-7,-11,-10,-12,-9,92,]),'STDIO_H':([4,],[9,]),'MATH_H':([4,],[10,]),'ID':([8,14,18,25,35,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62,64,66,70,71,72,73,75,79,80,81,82,83,84,85,86,87,88,89,90,98,111,112,113,115,117,121,122,127,128,129,],[15,19,27,33,40,58,58,58,-21,-22,-23,-24,-25,-26,-27,-28,-29,68,76,58,-20,-31,68,68,-35,68,68,-30,68,68,68,68,68,68,68,68,68,68,68,-34,68,68,-32,-38,68,68,125,-37,-33,-36,]),'LBRACKET':([15,19,58,68,],[20,20,73,90,]),'INT':([16,21,23,31,34,69,78,],[24,24,-17,-16,-13,91,-18,]),'VOID':([16,21,23,31,34,78,],[25,25,-17,-16,-13,-18,]),'ASSIGN':([19,27,58,114,],[28,28,71,121,]),'NUMBER':([20,28,57,70,71,73,75,80,81,82,83,84,85,86,87,88,89,90,111,112,117,121,],[29,36,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'MAIN':([24,],[32,]),'SEMICOLON':([26,27,36,37,40,57,65,67,68,76,93,94,96,100,101,102,103,104,105,106,107,108,109,118,119,120,124,125,126,],[34,-15,41,42,-14,66,79,-39,-40,98,-54,113,115,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-43,-41,-42,127,128,129,]),'COMMA':([26,27,40,99,],[35,-15,-14,117,]),'RBRACKET':([29,67,68,93,95,100,101,102,103,104,105,106,107,108,109,110,118,119,120,],[37,-39,-40,-54,114,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,118,-43,-41,-42,]),'LPAREN':([32,33,57,58,59,61,70,71,73,75,80,81,82,83,84,85,86,87,88,89,90,111,112,117,121,],[38,39,69,74,75,77,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'RPAREN':([38,39,67,68,74,91,92,93,97,100,101,102,103,104,105,106,107,108,109,118,119,120,123,],[43,44,-39,-40,96,111,112,-54,116,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-43,-41,-42,126,]),'LBRACE':([43,44,],[45,46,]),'RET':([45,46,47,48,49,50,51,52,53,54,55,56,62,64,66,72,79,98,113,115,127,128,129,],[57,57,57,-21,-22,-23,-24,-25,-26,-27,-28,-29,57,-20,-31,-35,-30,-34,-32,-38,-37,-33,-36,]),'IF':([45,46,47,48,49,50,51,52,53,54,55,56,62,64,66,72,79,98,113,115,127,128,129,],[59,59,59,-21,-22,-23,-24,-25,-26,-27,-28,-29,59,-20,-31,-35,-30,-34,-32,-38,-37,-33,-36,]),'GOTO':([45,46,47,48,49,50,51,52,53,54,55,56,62,64,66,72,79,98,113,115,116,127,128,129,],[60,60,60,-21,-22,-23,-24,-25,-26,-27,-28,-29,60,-20,-31,-35,-30,-34,-32,-38,122,-37,-33,-36,]),'PRINTF':([45,46,47,48,49,50,51,52,53,54,55,56,62,64,66,72,79,98,113,115,127,128,129,],[61,61,61,-21,-22,-23,-24,-25,-26,-27,-28,-29,61,-20,-31,-35,-30,-34,-32,-38,-37,-33,-36,]),'RBRACE':([47,48,49,50,51,52,53,54,55,56,62,64,66,72,79,98,113,115,127,128,129,],[63,-21,-22,-23,-24,-25,-26,-27,-28,-29,78,-20,-31,-35,-30,-34,-32,-38,-37,-33,-36,]),'MINUS':([57,65,67,68,70,71,73,75,80,81,82,83,84,85,86,87,88,89,90,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,111,112,117,118,119,120,121,123,124,],[70,81,-39,-40,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-54,81,81,81,-44,-45,-46,-47,81,81,81,81,81,81,81,70,70,70,-43,-41,-42,70,81,81,]),'COLON':([58,],[72,]),'PLUS':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[80,-39,-40,-54,80,80,80,-44,-45,-46,-47,80,80,80,80,80,80,80,-43,-41,-42,80,80,]),'TIMES':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[82,-39,-40,-54,82,82,82,82,82,-46,-47,82,82,82,82,82,82,82,-43,-41,-42,82,82,]),'DIVIDE':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[83,-39,-40,-54,83,83,83,83,83,-46,-47,83,83,83,83,83,83,83,-43,-41,-42,83,83,]),'EQUALS':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[84,-39,-40,-54,84,84,84,-44,-45,-46,-47,None,None,None,None,None,None,84,-43,-41,-42,84,84,]),'NOTEQUALS':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[85,-39,-40,-54,85,85,85,-44,-45,-46,-47,None,None,None,None,None,None,85,-43,-41,-42,85,85,]),'GREATER':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[86,-39,-40,-54,86,86,86,-44,-45,-46,-47,None,None,None,None,None,None,86,-43,-41,-42,86,86,]),'LESS':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[87,-39,-40,-54,87,87,87,-44,-45,-46,-47,None,None,None,None,None,None,87,-43,-41,-42,87,87,]),'GREATEREQUAL':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[88,-39,-40,-54,88,88,88,-44,-45,-46,-47,None,None,None,None,None,None,88,-43,-41,-42,88,88,]),'LESSEQUAL':([65,67,68,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,118,119,120,123,124,],[89,-39,-40,-54,89,89,89,-44,-45,-46,-47,None,None,None,None,None,None,89,-43,-41,-42,89,89,]),'STRING':([77,],[99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'includes':([0,],[2,]),'include':([0,2,],[3,6,]),'arrays_def':([2,],[5,]),'array_def':([2,5,],[7,12,]),'pointers':([5,],[11,]),'pointer':([5,11,],[13,17,]),'temporals':([11,],[16,]),'functions':([16,],[21,]),'main':([16,21,],[22,30,]),'function':([16,21,],[23,31,]),'list_temporals':([18,],[26,]),'body':([45,46,],[47,62,]),'statement':([45,46,47,62,],[48,48,64,64,]),'return':([45,46,47,62,],[49,49,49,49,]),'assignment':([45,46,47,62,],[50,50,50,50,]),'if_goto':([45,46,47,62,],[51,51,51,51,]),'goto':([45,46,47,62,],[52,52,52,52,]),'label':([45,46,47,62,],[53,53,53,53,]),'print':([45,46,47,62,],[54,54,54,54,]),'array_assign':([45,46,47,62,],[55,55,55,55,]),'call':([45,46,47,62,],[56,56,56,56,]),'expression':([57,70,71,73,75,80,81,82,83,84,85,86,87,88,89,90,111,112,117,121,],[65,93,94,95,97,100,101,102,103,104,105,106,107,108,109,110,119,120,123,124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> includes arrays_def pointers temporals functions main','program',6,'p_program','parser.py',23),
  ('program -> includes arrays_def pointers temporals main','program',5,'p_program','parser.py',24),
  ('includes -> includes include','includes',2,'p_includes','parser.py',28),
  ('includes -> include','includes',1,'p_includes','parser.py',29),
  ('include -> INCLUDE STDIO_H','include',2,'p_include','parser.py',33),
  ('include -> INCLUDE MATH_H','include',2,'p_include','parser.py',34),
  ('arrays_def -> arrays_def array_def','arrays_def',2,'p_arrays_def','parser.py',38),
  ('arrays_def -> array_def','arrays_def',1,'p_arrays_def','parser.py',39),
  ('array_def -> DOUBLE ID LBRACKET NUMBER RBRACKET SEMICOLON','array_def',6,'p_array_def','parser.py',43),
  ('pointers -> pointers pointer','pointers',2,'p_pointers','parser.py',47),
  ('pointers -> pointer','pointers',1,'p_pointers','parser.py',48),
  ('pointer -> DOUBLE ID ASSIGN NUMBER SEMICOLON','pointer',5,'p_pointer','parser.py',52),
  ('temporals -> DOUBLE list_temporals SEMICOLON','temporals',3,'p_temporals','parser.py',56),
  ('list_temporals -> list_temporals COMMA ID','list_temporals',3,'p_list_temporals','parser.py',60),
  ('list_temporals -> ID','list_temporals',1,'p_list_temporals','parser.py',61),
  ('functions -> functions function','functions',2,'p_functions','parser.py',65),
  ('functions -> function','functions',1,'p_functions','parser.py',66),
  ('function -> VOID ID LPAREN RPAREN LBRACE body RBRACE','function',7,'p_function','parser.py',70),
  ('main -> INT MAIN LPAREN RPAREN LBRACE body RBRACE','main',7,'p_main','parser.py',74),
  ('body -> body statement','body',2,'p_body','parser.py',78),
  ('body -> statement','body',1,'p_body','parser.py',79),
  ('statement -> return','statement',1,'p_statement','parser.py',83),
  ('statement -> assignment','statement',1,'p_statement','parser.py',84),
  ('statement -> if_goto','statement',1,'p_statement','parser.py',85),
  ('statement -> goto','statement',1,'p_statement','parser.py',86),
  ('statement -> label','statement',1,'p_statement','parser.py',87),
  ('statement -> print','statement',1,'p_statement','parser.py',88),
  ('statement -> array_assign','statement',1,'p_statement','parser.py',89),
  ('statement -> call','statement',1,'p_statement','parser.py',90),
  ('return -> RET expression SEMICOLON','return',3,'p_return','parser.py',95),
  ('return -> RET SEMICOLON','return',2,'p_return','parser.py',96),
  ('assignment -> ID ASSIGN expression SEMICOLON','assignment',4,'p_assignment','parser.py',100),
  ('if_goto -> IF LPAREN expression RPAREN GOTO ID SEMICOLON','if_goto',7,'p_if_goto','parser.py',104),
  ('goto -> GOTO ID SEMICOLON','goto',3,'p_goto','parser.py',108),
  ('label -> ID COLON','label',2,'p_label','parser.py',112),
  ('print -> PRINTF LPAREN STRING COMMA expression RPAREN SEMICOLON','print',7,'p_print','parser.py',116),
  ('array_assign -> ID LBRACKET expression RBRACKET ASSIGN expression SEMICOLON','array_assign',7,'p_array_assign','parser.py',120),
  ('call -> ID LPAREN RPAREN SEMICOLON','call',4,'p_call','parser.py',123),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',127),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',131),
  ('expression -> LPAREN INT RPAREN expression','expression',4,'p_expression_cast','parser.py',135),
  ('expression -> LPAREN DOUBLE RPAREN expression','expression',4,'p_expression_cast','parser.py',136),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_expression_array_access','parser.py',140),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',144),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',145),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',146),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',147),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','parser.py',148),
  ('expression -> expression NOTEQUALS expression','expression',3,'p_expression_binop','parser.py',149),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','parser.py',150),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','parser.py',151),
  ('expression -> expression GREATEREQUAL expression','expression',3,'p_expression_binop','parser.py',152),
  ('expression -> expression LESSEQUAL expression','expression',3,'p_expression_binop','parser.py',153),
  ('expression -> MINUS expression','expression',2,'p_expression_unop','parser.py',156),
]
